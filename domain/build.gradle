import java.nio.file.Files
import java.nio.file.Paths

plugins {
    id "com.eriwen.gradle.js" version "2.14.1"
}
apply plugin: 'kotlin2js'

ext {
    npmPackageDir = "$buildDir/package"
}

compileKotlin2Js {
    kotlinOptions {
        outputFile = "$buildDir/out/domain.js"
        moduleKind = "umd"
    }
}

javascript.source {
    dev {
        js {
            srcDir "$buildDir/out"
            include "*.js"
            exclude "*.meta.js"
        }
    }
}

jshint {
    def srcs = javascript.source.dev.js.files
    srcs.removeAll { file -> file.name.endsWith("kotlin.js") }
    tasks.jshint.source = srcs
    tasks.jshint.dest = file("${buildDir}/jshint.out")
    tasks.jshint.reporter = 'checkstyle'
    jshint.options = [expr: "true", unused: "true", eqnull: "true"]
}

task npmCreateDir(){
    doLast {
        def path = file(npmPackageDir)
        if (!path.exists()) path.mkdir()
    }
}

task npmCreatePackageJson() {
    dependsOn npmCreateDir
    doLast {
        def packageJson = new File("$npmPackageDir/package.json")
        packageJson.createNewFile()
        packageJson.write("""{
    "name": "timeline-domain",
    "description": "The domain model for the Timeline app",
    "version": "$parent.project.version",
    "main": "domain.js",
    "dependencies": {
        "kotlin": ">=$kotlin_version"
    }
}""")
    }
}

task npmCopyJs(type:Copy) {
    from "$buildDir/out"
    into "$buildDir/package"
    include "domain.js"
    dependsOn build
}

task createNpmPackage() {
    dependsOn npmCreateDir, npmCreatePackageJson, npmCopyJs
}


tasks.jshint.dependsOn compileKotlin2Js, compileTestKotlin2Js
check.dependsOn tasks.jshint

build.doLast {
    configurations.compile.each { File file ->
        copy {
            includeEmptyDirs = false

            from zipTree(file.absolutePath)
            into "${buildDir}/out"
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
            }
        }
    }
}

sourceSets {
    main.kotlin.srcDirs += "src/main/kotlin"
}

repositories {
    mavenCentral()
    maven {
        url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-js-library:$kotlin_version"
}
