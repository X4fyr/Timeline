apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

def lombokGeneratedCode = ['**/domain/elements/**']

jacocoTestReport {

    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
    test {
        jacoco {
            excludes = lombokGeneratedCode
        }
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, excludes: lombokGeneratedCode)
        })
    }
}

sonarqube {
    properties {
        property "sonar.exclusions", [lombokGeneratedCode]
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.7'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'
    testRuntime group: 'cglib', name: 'cglib-nodep', version: '3.2.4'
    testRuntime group: 'org.objenesis', name: 'objenesis', version: '2.1'
    compileOnly 'org.projectlombok:lombok:1.16.10'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
buildscript {
    ext.kotlin_version = '1.0.5-2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}
