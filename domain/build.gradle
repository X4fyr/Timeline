apply plugin: 'kotlin2js'
apply plugin: 'com.eriwen.gradle.js'

compileKotlin2Js {
    kotlinOptions.outputFile = "$buildDir/out/domain.js"
}

javascript.source {
    dev {
        js {
            srcDir "$buildDir/out"
            include "*.js"
            exclude "*.meta.js"
        }
    }
}

jshint {
    def srcs =javascript.source.dev.js.files
    srcs.removeAll { file -> file.name.endsWith("kotlin.js") }
    tasks.jshint.source = srcs
    tasks.jshint.dest = file("${buildDir}/jshint.out")
    tasks.jshint.reporter = 'checkstyle'
    jshint.options = [expr: "true", unused: "true", eqnull: "true"]
}

tasks.jshint.dependsOn compileKotlin2Js, compileTestKotlin2Js
check.dependsOn tasks.jshint

sourceSets {
    main.kotlin.srcDirs += "src/main/kotlin"
}

clean {
    delete "$parent.projectDir/app/www/js/domain.js", "$parent.projectDir/app/www/js/kotlin.js"
}

build.doLast {
    configurations.compile.each { File file ->
        copy {
            includeEmptyDirs = false

            from zipTree(file.absolutePath)
            into "${buildDir}/out"
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
            }
        }
    }
    copy {
        includeEmptyDirs = false
        from "$buildDir/out"
        into "$parent.projectDir/app/www/js"
        include { fileTreeElement ->
            def path = fileTreeElement.path
            path.endsWith(".js") && !path.endsWith(".meta.js")
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-js-library:$kotlin_version"
}
